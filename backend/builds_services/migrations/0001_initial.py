# Generated by Django 5.0.6 on 2024-07-02 05:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('builds', '0001_initial'),
        ('catalogs', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnalyzeActionReasons',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Осноание действия при анализе',
                'verbose_name_plural': 'Осноания действия при анализе',
                'db_table': 's_analyze_action_reasons',
            },
        ),
        migrations.CreateModel(
            name='BuildServiceContainerTypes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Тип контейнера работ для дома',
                'verbose_name_plural': 'Типы контейнера работ для дома',
                'db_table': 's_builds_service_container_types',
            },
        ),
        migrations.CreateModel(
            name='BuildServiceContainerUnits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Единица измерения для контейнера работ для дома',
                'verbose_name_plural': 'Единицы измерения для контейнера работ для дома',
                'db_table': 's_builds_service_container_units',
            },
        ),
        migrations.CreateModel(
            name='BuildServicePeriods',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
                ('name_v', models.CharField(blank=True, max_length=1000, null=True, verbose_name='Наименование (винительный падеж)')),
            ],
            options={
                'verbose_name': 'Периодичность',
                'verbose_name_plural': 'Периодичности',
                'db_table': 's_builds_service_periods',
            },
        ),
        migrations.CreateModel(
            name='BuildsServiceConditions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Условие выполнения работы',
                'verbose_name_plural': 'Условия выполнения работы',
                'db_table': 's_service_conditions',
            },
        ),
        migrations.CreateModel(
            name='ContainerLoadDataRules',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
                ('type', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Тип')),
                ('is_repair', models.BooleanField(default=False, verbose_name='Текущий ремонт')),
            ],
            options={
                'verbose_name': 'Правила загрузки данных в отчёты',
                'db_table': 's_report_load_rules',
            },
        ),
        migrations.CreateModel(
            name='CostContainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
                ('full_name', models.CharField(max_length=1000, verbose_name='Наименование')),
                ('subtitle', models.CharField(max_length=1000, verbose_name='Наименование')),
                ('color1', models.CharField(max_length=6, verbose_name='Цвет')),
                ('color2', models.CharField(max_length=6, verbose_name='Цвет')),
                ('show_repair', models.BooleanField(default=False, verbose_name='Отображать текущие ремонты')),
                ('show_avg', models.BooleanField(default=False, verbose_name='Отображать среднее')),
                ('show_minmax', models.BooleanField(default=False, verbose_name='Отображать минимум и максимум')),
                ('parent', models.PositiveIntegerField(blank=True, default=None, null=True, verbose_name='Вышестоящий контейнер')),
                ('work_name', models.CharField(max_length=1000, verbose_name='Наименование работ')),
                ('repair_name', models.CharField(max_length=1000, verbose_name='Наименование текущих ремонтов')),
                ('display_order', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Порядок отображения')),
            ],
            options={
                'verbose_name': 'Контейнер для сравнения цен',
                'verbose_name_plural': 'Контейнеры для сравнения цен',
                'db_table': 'd_cost_container',
            },
        ),
        migrations.CreateModel(
            name='CostContainerDenominators',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Знаменатель',
                'verbose_name_plural': 'Знаменатели',
                'db_table': 's_cost_container_denominators',
            },
        ),
        migrations.CreateModel(
            name='RepairAnalyzeActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Действие при анализе ТР',
                'verbose_name_plural': 'Действия при анализе ТР',
                'db_table': 's_repair_analyze_actions',
            },
        ),
        migrations.CreateModel(
            name='ServiceAnalyzeActions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Действие при анализе',
                'verbose_name_plural': 'Действия при анализе',
                'db_table': 's_service_analyze_actions',
            },
        ),
        migrations.CreateModel(
            name='ServiceGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
                ('name_sokr', models.CharField(max_length=500, verbose_name='Наименование сокращённое')),
                ('color', models.CharField(blank=True, max_length=6, null=True, verbose_name='Цвет')),
                ('color2', models.CharField(blank=True, max_length=6, null=True, verbose_name='Цвет')),
            ],
            options={
                'verbose_name': 'Группа работ',
                'verbose_name_plural': 'Группы работ',
                'db_table': 's_service_groups',
            },
        ),
        migrations.CreateModel(
            name='BuildServiceContainer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
                ('dbegin', models.DateField(verbose_name='Дата начала')),
                ('dend', models.DateField(blank=True, null=True, verbose_name='Дата окончания')),
                ('total_rub', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=15, null=True, verbose_name='Начислено за период')),
                ('build', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='builds.builds', verbose_name='Дом')),
                ('city', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='catalogs.cities', verbose_name='Город')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.buildservicecontainertypes', verbose_name='Тип')),
                ('unit', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='builds_services.buildservicecontainerunits', verbose_name='Единица измерения')),
            ],
            options={
                'verbose_name': 'Контейнер работ для дома',
                'verbose_name_plural': 'Контейнеры работ для дома',
                'db_table': 'd_build_service_container',
            },
        ),
        migrations.CreateModel(
            name='BuildsServices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('to_290', models.PositiveIntegerField(blank=True, null=True, verbose_name='Работа из минимального перечня')),
                ('name', models.CharField(max_length=3000, verbose_name='Наименование')),
                ('name_sokr', models.CharField(max_length=500, verbose_name='Наименование сокращённое')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Цена')),
                ('is_repair', models.BooleanField(default=False, verbose_name='Текущий ремонт')),
                ('mbegin', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Месяц начала выполнения')),
                ('mend', models.PositiveSmallIntegerField(blank=True, null=True, verbose_name='Месяц окончания выполнения')),
                ('period', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=6, null=True, verbose_name='Раз в')),
                ('condition', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.buildsserviceconditions', verbose_name='Условие')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.buildservicecontainer', verbose_name='Контейнер')),
                ('period_y', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.buildserviceperiods', verbose_name='Период')),
            ],
            options={
                'verbose_name': 'Работы дома',
                'verbose_name_plural': 'Работы для домов',
                'db_table': 's_build_services',
            },
        ),
        migrations.CreateModel(
            name='ContainerLoadData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=3000, verbose_name='Наименование')),
                ('cost', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Стоимость')),
                ('is_repair', models.BooleanField(default=False, verbose_name='Текущий ремонт')),
                ('to_290', models.PositiveIntegerField(blank=True, null=True, verbose_name='Работа из минимального перечня')),
                ('subgroup_to_load', models.CharField(blank=True, max_length=3000, null=True, verbose_name='Подгруппа работ')),
                ('is_to_290', models.BooleanField(default=False, verbose_name='Работа из минимального перечня')),
                ('is_repair_sovdom', models.BooleanField(default=False, verbose_name='Текущий ремонт подтверждён')),
                ('period', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='период')),
                ('period_y', models.CharField(blank=True, max_length=100, null=True, verbose_name='период')),
                ('period_additional', models.CharField(blank=True, max_length=100, null=True, verbose_name='период')),
                ('period_comment', models.CharField(blank=True, max_length=100, null=True, verbose_name='период')),
                ('container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.buildservicecontainer', verbose_name='Контейнер дома')),
                ('rule', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.containerloaddatarules', verbose_name='Правило')),
            ],
            options={
                'verbose_name': 'Сырые данные для загрузки',
                'db_table': 'd_container_raw_data',
            },
        ),
        migrations.CreateModel(
            name='BuildCostContainers',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds.builds', verbose_name='Контейнер')),
                ('cost_container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.costcontainer', verbose_name='Контейнер')),
            ],
            options={
                'verbose_name': 'Контейнер сравнеия цен для дома',
                'verbose_name_plural': 'Контейнеры сравнеия цен для домов',
                'db_table': 'z_build_cost_container',
            },
        ),
        migrations.CreateModel(
            name='BuildCostContainerData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_rub', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Стоимость')),
                ('cost_tr_rub', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Стоимость ТР')),
                ('stavka_rub', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Ставка платы')),
                ('stavka_tr_rub', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Ставка ТР')),
                ('year', models.PositiveIntegerField(verbose_name='Год')),
                ('calc_date', models.DateField(verbose_name='Дата расчёта')),
                ('build', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds.builds', verbose_name='Контейнер')),
                ('cost_container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.costcontainer', verbose_name='Контейнер дома')),
            ],
            options={
                'verbose_name': 'Рассчитанные данные для контейнера сравнеия цен для дома',
                'db_table': 'z_build_cost_container_data',
            },
        ),
        migrations.AddField(
            model_name='costcontainer',
            name='denominator',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.costcontainerdenominators', verbose_name='Знаменталель'),
        ),
        migrations.CreateModel(
            name='CostContainerPrices',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('year', models.PositiveIntegerField(verbose_name='Год')),
                ('price', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Цена')),
                ('city', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogs.cities', verbose_name='Город')),
                ('cost_container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.costcontainer', verbose_name='Контейнер')),
            ],
            options={
                'verbose_name': 'Цена на работу для контернера',
                'verbose_name_plural': 'Цены на работы для контернеров',
                'db_table': 's_cost_container_prices',
            },
        ),
        migrations.CreateModel(
            name='CostContainerWorks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.costcontainer', verbose_name='Контейнер')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.buildsservices', verbose_name='Работа из минимального перечня')),
            ],
            options={
                'verbose_name': 'Работы контернера',
                'verbose_name_plural': 'Работы контернеров',
                'db_table': 's_cost_container_services',
            },
        ),
        migrations.CreateModel(
            name='BuildsServicesAnalize',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_citizen', models.BooleanField(default=False, verbose_name='Преложение жителей')),
                ('cost2', models.DecimalField(blank=True, decimal_places=2, default=0.0, max_digits=10, null=True, verbose_name='Цена')),
                ('services_in_container', models.PositiveIntegerField(blank=True, null=True, verbose_name='Работ в контейнере цен для сравнения')),
                ('period_comment', models.CharField(max_length=1000, verbose_name='Периодичность комментарий')),
                ('action_reason', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.analyzeactionreasons', verbose_name='Действие при анализе ТР')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.buildsservices', verbose_name='Контейнер')),
                ('cost_container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.costcontainer', verbose_name='Контейнер')),
                ('repair_action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.repairanalyzeactions', verbose_name='Действие при анализе ТР')),
                ('action', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.serviceanalyzeactions', verbose_name='Действие при анализе')),
            ],
            options={
                'verbose_name': 'Анализ работы',
                'verbose_name_plural': 'Анализ работы',
                'db_table': 'd_build_service_analyze',
            },
        ),
        migrations.CreateModel(
            name='ServiceSubgroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, verbose_name='Наименование')),
                ('name_sokr', models.CharField(max_length=500, verbose_name='Наименование сокращённое')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.servicegroups', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Подгруппа работ',
                'verbose_name_plural': 'Подгруппы работ',
                'db_table': 's_service_subgroups',
            },
        ),
        migrations.CreateModel(
            name='CostContainerGroups',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost_container', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.costcontainer', verbose_name='Контейнер')),
                ('subgroup', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.servicesubgroups', verbose_name='Подгруппа работ')),
            ],
            options={
                'verbose_name': 'Группы работы контернера',
                'verbose_name_plural': 'Группы работ контернеров',
                'db_table': 's_cost_container_groups',
            },
        ),
        migrations.AddField(
            model_name='buildsservices',
            name='subgroup',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='builds_services.servicesubgroups', verbose_name='Подгруппа'),
        ),
    ]
